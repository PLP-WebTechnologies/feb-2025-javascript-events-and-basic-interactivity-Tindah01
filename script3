// script3.js
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        document.querySelector(this.getAttribute('href')).scrollIntoView({
            behavior: 'smooth'
        });
    });
});
// script3.js
document.querySelector('.contact-form form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const subject = document.getElementById('subject').value;
    const message = document.getElementById('message').value;
    
    if (!name || !email || !subject || !message) {
        alert('Please fill in all fields');
        return;
    }
    
    // Here you would typically send the data to a server
    // For now, we'll just show a success message
    alert(`Thanks for your message, ${name}! I'll get back to you soon.`);
    this.reset();
});
// script3.js
const skillTags = document.querySelectorAll('.skill-tag');
skillTags.forEach(tag => {
    tag.addEventListener('mouseover', () => {
        tag.style.transform = 'scale(1.1)';
        tag.style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';
    });
    tag.addEventListener('mouseout', () => {
        tag.style.transform = 'scale(1)';
        tag.style.boxShadow = 'none';
    });
});
// script3.js
const sections = document.querySelectorAll('.section');

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('animate');
        }
    });
}, { threshold: 0.1 });

sections.forEach(section => {
    observer.observe(section);
});
// script3.js
document.querySelector('footer p').textContent = `Â© ${new Date().getFullYear()} Tindah`;
// script3.js
const projectCards = document.querySelectorAll('.project-card');
const modal = document.createElement('div');
modal.className = 'modal';
modal.innerHTML = `
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <img class="modal-img" src="" alt="">
        <h3 class="modal-title"></h3>
        <p class="modal-description"></p>
    </div>
`;
document.body.appendChild(modal);

projectCards.forEach(card => {
    card.addEventListener('click', () => {
        const imgSrc = card.querySelector('img').src;
        const title = card.querySelector('h3').textContent;
        const description = card.querySelector('p').textContent;
        
        modal.querySelector('.modal-img').src = imgSrc;
        modal.querySelector('.modal-title').textContent = title;
        modal.querySelector('.modal-description').textContent = description;
        
        modal.style.display = 'block';
    });
});

modal.querySelector('.close-modal').addEventListener('click', () => {
    modal.style.display = 'none';
});

window.addEventListener('click', (e) => {
    if (e.target === modal) {
        modal.style.display = 'none';
    }
});
// dark/light mode taggle
const modeToggle = document.createElement('button');
modeToggle.className = 'mode-toggle';
modeToggle.textContent = 'ðŸŒ“';
document.querySelector('nav').appendChild(modeToggle);

modeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode');
    localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
});

// Check for saved user preference
if (localStorage.getItem('darkMode') === 'true') {
    document.body.classList.add('dark-mode');
}
// Dynamic Navigation Highlighting
window.addEventListener('scroll', () => {
    const scrollPosition = window.scrollY;
    
    document.querySelectorAll('.section').forEach(section => {
        const sectionTop = section.offsetTop - 100;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');
        
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
            document.querySelector(`.nav-links a[href="#${sectionId}"]`).classList.add('active');
        } else {
            document.querySelector(`.nav-links a[href="#${sectionId}"]`).classList.remove('active');
        }
    });
});

// Responsive Mobile Menu
const mobileMenuBtn = document.createElement('button');
mobileMenuBtn.className = 'mobile-menu-btn';
mobileMenuBtn.innerHTML = 'â˜°';
document.querySelector('nav').prepend(mobileMenuBtn);

mobileMenuBtn.addEventListener('click', () => {
    document.querySelector('.nav-links').classList.toggle('show');
});

// Close menu when clicking on a link
document.querySelectorAll('.nav-links a').forEach(link => {
    link.addEventListener('click', () => {
        document.querySelector('.nav-links').classList.remove('show');
    });
});

//Typewriter Effect for Hero Section
const heroText = document.querySelector('.me-content h1');
const originalText = heroText.textContent;
heroText.textContent = '';

let i = 0;
const typingEffect = setInterval(() => {
    if (i < originalText.length) {
        heroText.textContent += originalText.charAt(i);
        i++;
    } else {
        clearInterval(typingEffect);
    }
}, 100);
